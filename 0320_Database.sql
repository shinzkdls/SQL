Rem Copyright (c) 1990 by Oracle Corporation
Rem NAME
REM    UTLSAMPL.SQL
Rem  FUNCTION
Rem  NOTES
Rem  MODIFIED
Rem	gdudey	   06/28/95 -  Modified for desktop seed database
Rem	glumpkin   10/21/92 -  Renamed from SQLBLD.SQL
Rem	blinden   07/27/92 -  Added primary and foreign keys to EMP and DEPT
Rem	rlim	   04/29/91 -	      change char to varchar2
Rem	mmoore	   04/08/91 -	      use unlimited tablespace priv
Rem	pritto	   04/04/91 -	      change SYSDATE to 13-JUL-87
Rem   Mendels	 12/07/90 - bug 30123;
Rem add to_date calls so language independent
Rem
rem
rem $Header: utlsampl.sql 7020100.1 94/09/23 22:14:24 cli Generic<base> $ sqlbld.sql
rem
SET TERMOUT OFF
SET ECHO OFF

rem CONGDON    Invoked in RDBMS at build time.	 29-DEC-1988
rem OATES:     Created: 16-Feb-83

GRANT CONNECT,RESOURCE,UNLIMITED TABLESPACE TO test IDENTIFIED BY test;
ALTER USER test DEFAULT TABLESPACE USERS;
ALTER USER test TEMPORARY TABLESPACE TEMP;
ALTER USER test ACCOUNT UNLOCK;

GRANT unlimited tablespace TO test;

--CONNECT test/test

SELECT * FROM DEPT;

COMMIT;

DROP TABLE DEPT;

CREATE TABLE DEPT
       (DEPTNO NUMBER(2) CONSTRAINT PK_DEPT PRIMARY KEY,
	DNAME VARCHAR2(14) ,
	LOC VARCHAR2(13) ) ;

DROP TABLE EMP;

SELECT * FROM EMP;

CREATE TABLE EMP
       (EMPNO NUMBER(4) CONSTRAINT PK_EMP PRIMARY KEY,
	ENAME VARCHAR2(10),
	JOB VARCHAR2(9),
	MGR NUMBER(4),
	HIREDATE DATE,
	SAL NUMBER(7,2),
	COMM NUMBER(7,2),
	DEPTNO NUMBER(2) CONSTRAINT FK_DEPTNO REFERENCES DEPT);

INSERT INTO DEPT VALUES
	(10,'ACCOUNTING','NEW YORK');

INSERT INTO DEPT VALUES (20,'RESEARCH','DALLAS');

INSERT INTO DEPT VALUES
	(30,'SALES','CHICAGO');

INSERT INTO DEPT VALUES
	(40,'OPERATIONS','BOSTON');

INSERT INTO EMP VALUES
(7369,'SMITH','CLERK',7902,to_date('17-12-1980','dd-mm-yyyy'),800,NULL,20);
INSERT INTO EMP VALUES
(7499,'ALLEN','SALESMAN',7698,to_date('20-2-1981','dd-mm-yyyy'),1600,300,30);
INSERT INTO EMP VALUES
(7521,'WARD','SALESMAN',7698,to_date('22-2-1981','dd-mm-yyyy'),1250,500,30);
INSERT INTO EMP VALUES
(7566,'JONES','MANAGER',7839,to_date('2-4-1981','dd-mm-yyyy'),2975,NULL,20);
INSERT INTO EMP VALUES
(7654,'MARTIN','SALESMAN',7698,to_date('28-9-1981','dd-mm-yyyy'),1250,1400,30);
INSERT INTO EMP VALUES
(7698,'BLAKE','MANAGER',7839,to_date('1-5-1981','dd-mm-yyyy'),2850,NULL,30);
INSERT INTO EMP VALUES
(7782,'CLARK','MANAGER',7839,to_date('9-6-1981','dd-mm-yyyy'),2450,NULL,10);
INSERT INTO EMP VALUES
(7788,'SCOTT','ANALYST',7566,to_date('13-7-1987','dd-mm-yyyy')-85,3000,NULL,20);
INSERT INTO EMP VALUES
(7839,'KING','PRESIDENT',NULL,to_date('17-11-1981','dd-mm-yyyy'),5000,NULL,10);
INSERT INTO EMP VALUES
(7844,'TURNER','SALESMAN',7698,to_date('8-9-1981','dd-mm-yyyy'),1500,0,30);
INSERT INTO EMP VALUES
(7876,'ADAMS','CLERK',7788,to_date('13-7-1987','dd-mm-yyyy')-51,1100,NULL,20);
INSERT INTO EMP VALUES
(7900,'JAMES','CLERK',7698,to_date('3-12-1981','dd-mm-yyyy'),950,NULL,30);
INSERT INTO EMP VALUES
(7902,'FORD','ANALYST',7566,to_date('3-12-1981','dd-mm-yyyy'),3000,NULL,20);
INSERT INTO EMP VALUES
(7934,'MILLER','CLERK',7782,to_date('23-1-1982','dd-mm-yyyy'),1300,NULL,10);

DROP TABLE BONUS;

CREATE TABLE BONUS
	(
	ENAME VARCHAR2(10)	,
	JOB VARCHAR2(9)  ,
	SAL NUMBER,
	COMM NUMBER
	) ;

DROP TABLE SALGRADE;

CREATE TABLE SALGRADE
      ( GRADE NUMBER,
	LOSAL NUMBER,
	HISAL NUMBER );

INSERT INTO SALGRADE VALUES (1,700,1200);
INSERT INTO SALGRADE VALUES (2,1201,1400);
INSERT INTO SALGRADE VALUES (3,1401,2000);
INSERT INTO SALGRADE VALUES (4,2001,3000);
INSERT INTO SALGRADE VALUES (5,3001,9999);
COMMIT;

SET TERMOUT ON
SET ECHO ON

SELECT EMPNO AS EMPLOYEE_NO
      ,ENAME AS EMPLOYEE_NAME
      ,JOB
      ,MGR AS MANAGER
      ,HIREDATE 
      ,SAL AS SALARY
      ,COMM COMMISSION
      ,DEPTNO AS DEPARMENT_NO
FROM EMP
WHERE COMM IS NULL 
AND SAL IS NOT NULL -- NULL갑과는 비교연산 불가
ORDER BY DEPTNO DESC, ENAME ASC 
;



SELECT EMPNO 
      ,ENAME 
      ,CONCAT(EMPNO,ENAME)
      ,CONCAT(EMPNO, ' ') 
FROM EMP
WHERE ENAME = UPPER('smith')
;


SELECT '010-1234-5678' AS PHONE
      ,REPLACE ('010-1234-5678','-',' ') AS RE1
      ,REPLACE ('010-1234-5678','-') AS RE2
FROM DUAL
;

SELECT LPAD('ORACLE',20) AS LPAD_20
      ,RPAD('ORACLE',20) AS RPAD_20
      ,LPAD('ORACLE',20,'*') AS LPAD_20
      ,RPAD('ORACLE',20,'*') AS RPAD_20
FROM DUAL
;

SELECT ROUND(1234.5678) AS R
      ,ROUND(1234.5678, 0) AS R_0
      ,ROUND(1234.5678, 1) AS R_1
      ,ROUND(1234.5678, 2) AS R_2
FROM DUAL
;

SELECT TRUNC(1234.5678) AS T
      ,TRUNC(1234.5678, 0) AS T_0
      ,TRUNC(1234.5678, 1) AS T_1
      ,TRUNC(1234.5678, 2) AS T_2
FROM DUAL
;

SELECT CEIL(3.14) AS CEIL -- 부동소수를 정수로 올림
      ,FLOOR(3.14) AS FLOOR -- 부동소수를 정수로 내림
      ,CEIL(-3.14) AS CEIL
      ,FLOOR(-3.14) AS FLOOR
      ,MOD(15,6) --나머지구하는 함수
FROM DUAL
;

SELECT REMAINDER(15,4)
FROM DUAL
;

SELECT SYSDATE AS NOW
      ,SYSDATE - 1 AS YESTERDAY
      ,SYSDATE + 10 AS TEN_DAYS_FROM_NOW
FROM DUAL
;

SELECT ADD_MONTHS(SYSDATE, :MONTH)
FROM DUAL
;

SELECT ADD_MONTHS(SYSDATE, 12*20) WORK10YEAR
FROM DUAL
;

SELECT SYSDATE NOW
      ,NEXT_DAY(SYSDATE, '월')
      ,LAST_DAY(SYSDATE)
FROM DUAL
;

SELECT SYSDATE 
	  ,ROUND(SYSDATE, 'CC') AS FORMAT_CC
	  ,ROUND(SYSDATE, 'Q') AS FORMAT_Q
	  ,ROUND(SYSDATE, 'DDD') AS FORMAT_DDD
FROM DUAL
;
	  

SELECT *
FROM EMP
WHERE DEPTNO = '20'
;

SELECT TO_CHAR(SYSDATE, 'YYYY/MM/DD HH24')
FROM DUAL
; --24시간 표시까지

SELECT TO_CHAR(SYSDATE, 'DD HH24:MI:SS')
FROM DUAL
;-- 시분초까지

SELECT SYSDATE 
      ,TO_CHAR(SYSDATE, 'MM') AS MM1
      ,TO_CHAR(SYSDATE, 'MON', 'NLS_DATE_LANGUAGE=KOREAN') AS KOR
FROM DUAL
;

SELECT SYSDATE 
      ,TO_CHAR(SYSDATE, 'HH24:MI:SS') AS MM1
FROM DUAL
;

SELECT TO_NUMBER('1,000,000', '999,999,999') AS A
FROM DUAL
;


SELECT TO_DATE('20230317','YYYY/MM/DD') AS YMD
FROM DUAL
;

SELECT TO_DATE('490317','YY/MM/DD') AS YMD
      ,TO_DATE('490317','RR/MM/DD') AS YMD
      ,TO_DATE('500317','YY/MM/DD') AS YMD
      ,TO_DATE('500317','RR/MM/DD') AS YMD
      ,TO_DATE('510317','YY/MM/DD') AS YMD
      ,TO_DATE('510317','RR/MM/DD') AS YMD
FROM DUAL
;


--NULL 값 : 알 수 없는 값, 계산이 불가능한 값
--NULL 값 비교는 IS NULL <> IS NOT NULL
--NVL(입력값, NULL인 경우 대체할 값) 매우중요!!
--NVL2(입력값, NULL이 아닌 경우, NULL인 경우)
SELECT EMPNO
      ,ENAME 
      ,SAL*12 + NVL(COMM,0) AS SAL12
      ,JOB
      ,TO_CHAR(HIREDATE, 'YYYY-MM-DD') AS YMD  
FROM EMP
ORDER BY SAL12 DESC 
;


SELECT EMPNO 
      ,ENAME 
      ,SAL
      ,COMM 
      ,DECODE(JOB,
              'MANAGER', SAL*0.2,
              'SALESMAN', SAL*0.3,
              'ANALYST', SAL*0.05,
              SAL*0.1) AS BONUS
FROM EMP
;


SELECT EMPNO 
      ,ENAME 
      ,SAL
      ,COMM 
      ,CASE WHEN JOB ='MANAGER' THEN SAL*0.2
            WHEN JOB ='SALESMAN' THEN SAL*0.3
            WHEN JOB ='ANALYST' THEN SAL*0.05
            ELSE SAL*0.2 END AS BONUS
FROM EMP
;






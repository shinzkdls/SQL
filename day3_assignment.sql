/*이론과제 3일차
 * 1. 원자성, 완전 함수적 종속, 이행적 종속 제거
 * 2. 제3정규화, 제2정규화
 * 3. inner join, left join, right join, outer join
 * 4. 반정규화
 * 5. 인댁스, 인덱스, 인덱스, 인덱스
 * 6. 트랜잭션, 원자성, 일관성
 */


--실습과제 3일차
--(1)--
--1
CREATE TABLE DEPT_TEST AS
SELECT *
FROM DEPT
;

INSERT INTO DEPT_TEST(DEPTNO, DNAME, LOC)
SELECT 50, 'ORACLE', 'BUSAN' FROM DUAL UNION ALL
SELECT 60, 'SQL', 'ILSAN' FROM DUAL UNION ALL
SELECT 70, 'SELECT', 'INCHEON' FROM DUAL UNION ALL
SELECT 80, 'DML', 'BUNDANG' FROM DUAL
;

SELECT *
FROM DEPT_TEST
;


--2
CREATE TABLE EMP_TEST AS
SELECT *
FROM EMP
;

INSERT INTO EMP_TEST(EMPNO, ENAME,JOB, MGR, HIREDATE, SAL,DEPTNO)
SELECT 7201, 'TEST_USER1', 'MANAGER', 9999, '2023-03-01' , 3100, 10 FROM DUAL UNION ALL
SELECT 7202, 'TEST_USER2', 'CLERK', 9999, '2023-03-02' , 3200, 20 FROM DUAL UNION ALL
SELECT 7203, 'TEST_USER3', 'MANAGER', 9999, '2023-03-03' , 3300, 30 FROM DUAL UNION ALL
SELECT 7204, 'TEST_USER4', 'SALESMAN', 9999, '2023-03-04' , 3300, 40 FROM DUAL UNION ALL
SELECT 7205, 'TEST_USER5', 'CLERK', 9999, '2023-03-05' , 3400, 50 FROM DUAL UNION ALL
SELECT 7206, 'TEST_USER6', 'MANAGER', 9999, '2023-03-06' , 3500, 60 FROM DUAL UNION ALL
SELECT 7207, 'TEST_USER7', 'SALESMAN', 9999, '2023-03-07' , 3600, 70 FROM DUAL UNION ALL
SELECT 7208, 'TEST_USER8', 'CLERK', 9999, '2023-03-08' , 3700, 80 FROM DUAL
;

SELECT *
FROM EMP_TEST
;

--3
UPDATE EMP_TEST
SET DEPTNO = 70
WHERE SAL > (SELECT AVG(SAL)
             FROM EMP_TEST
             WHERE DEPTNO = 50)
;             

--4
UPDATE EMP_TEST
SET DEPTNO = 80,
    SAL = SAL*1.2
WHERE HIREDATE > (SELECT MIN(HIREDATE)
                  FROM EMP_TEST
                  WHERE DEPTNO = 60)
;             


--(2)--
--1
CREATE TABLE EMP_NEW(
 EMPNO 		NUMBER(5),
 ENAME 		VARCHAR2(20),
 JOB		VARCHAR2(10),
 MGR 		NUMBER(5),
 HIREDATE	DATE,
 SAL  		NUMBER(7,2),
 DEPTNO 	NUMBER(2)
);

--2
ALTER TABLE EMP_NEW
ADD RESIGN_DATE DATE
;

--3
ALTER TABLE EMP_NEW
ADD SUR_NAME VARCHAR2(5)
;

--4
ALTER TABLE EMP_NEW
MODIFY SUR_NAME VARCHAR2(10)
;

--5
ALTER TABLE EMP_NEW
RENAME COLUMN ENAME TO FULL_NAME
;

--(3)--
--1
CREATE TABLE EMP_IDX AS
SELECT *
FROM EMP
;

CREATE INDEX EMP_EMPNO_IDX ON EMP_IDX(EMPNO);

--2
SELECT *
FROM USER_INDEXES
WHERE INDEX_NAME LIKE 'EMP_EMPNO_IDX'
;


--3
CREATE VIEW EMP_VIEW AS
SELECT EMPNO
      ,ENAME
      ,JOB
      ,DEPTNO
      ,SAL
      ,NVL2(COMM,'Y','N') AS COMM
FROM EMP_IDX
WHERE SAL >= 2000
;


--(4)--
--1. CONSTRAINTS
--2. UNIQUE
--3. NOT NULL
--4. PRIMARY KEY
--5. FOREIGN KEY